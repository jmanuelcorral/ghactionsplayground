---
name: comments recipe on pull requests

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]
# idea from : https://pakstech.com/blog/gh-actions-issue-comments/
jobs:
  comments:
    name: Process a Deploy
    runs-on: ubuntu-20.04
    if: ${{ contains(github.event.comment.body , '/deploydb')  &&  github.event.issue.pull_request }}
    steps:

    - uses: actions/github-script@v3
      id: get-pr
      with:
        script: |
          const request = {
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          }
          core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
          try {
            const result = await github.pulls.get(request)
            return result.data
          } catch (err) {
            core.setFailed(`Request failed with error ${err}`)
          }
    
    - name: Add Comment
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'You have ordered a Database Deploy from branch ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}, You can see this workflow running on: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
          });  
     
    - uses: actions/github-script@v6
      with:
        script: |
          let body =  context.payload.comment.body;
          let envtodeploy = body.replace('/deploydb','').replace(' ','').toLowerCase();
          let labelstoadd = ['sqldeploy']
          console.log(envtodeploy);
          if (envtodeploy === 'dev') labelstoadd.push('sqldev')
          else if (envtodeploy === 'pre') labelstoadd.push('sqlpre')
          else if (envtodeploy === 'pro') {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'You have ordered a Database Deploy from a PullRequest comment, This is not possible allowed',
            });  
            throw "Invalid Environment"
            }
          if (labelstoadd.length == 2)
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: labelstoadd
            });    
          else throw "Environment errors"

    - uses: actions/checkout@v2
      with:
        repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
        ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }} # or .head.ref for branch name
    - name: Fail randomly
      run: |
        cat README.md
        exit $((RANDOM % 2))   

    - name: Message success
      if: ${{ success() }}
      uses: actions/github-script@v4
      with:
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Deployment succeeded! ✅',
          });          
    - name: Message failure
      if: ${{ failure() }}
      uses: actions/github-script@v4
      with:
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Deployment failed! ❌',
          });          
